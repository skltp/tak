pipeline {
  agent any

  environment{
    JDK_PATH = tool name: 'Java_7_80'
    JAVA_HOME = "${JDK_PATH}"
    MAVEN_DOCKER_IMAGE = 'maven:3.5-jdk-7'
    sh 'java -version'
  }

  stages{
    stage('Build') {
      agent {
        docker {
          image "${MAVEN_DOCKER_IMAGE}"
          args "-v ${JDK_PATH}:${JDK_PATH}"
          reuseNode true
        }
      }
      steps {
        configFileProvider([configFile(fileId: "${params.CONFIG_FILE_ID}", variable: 'MAVEN_SETTINGS')]) {
          sh 'mvn --global-settings ${MAVEN_SETTINGS} clean install'
        }
      }   
    }

    stage('Results'){
      steps{
        junit '**/target/surefire-reports/TEST-*.xml'
		archiveArtifacts '**/target/*.war'
      }
    }

    stage('Nexus') {
      agent {
        docker {
          image "${MAVEN_DOCKER_IMAGE}"
          args "-v ${JDK_PATH}:${JDK_PATH}"
          reuseNode true
        }
      }
      steps {
        configFileProvider([configFile(fileId: "${params.CONFIG_FILE_ID}", variable: 'MAVEN_SETTINGS')]) {
          sh 'mvn --global-settings ${MAVEN_SETTINGS} -Pskltp -DskipTests=true deploy'
        }
      }
    }

    stage('Deploy') {
      environment{
        MAVEN_POM_VERSION = readMavenPom().getVersion()
        DEPLOY_SERVER = "${params.DEPLOY_TO_TEST ? 'ine-tit-app04' : 'ine-dit-app04'}"
      }
      steps{
        sshagent(["${params.SSH_CREDENTIALS_ID}"]) {
          echo "MAVEN_POM_VERSION: ${MAVEN_POM_VERSION}"
		  sh 'scp tak-web/target/*.war ine-ntjp-build@${DEPLOY_SERVER}:/www/inera/home/ine-ntjp-build'
    	  sh 'scp tak-services/target/*.war ine-ntjp-build@${DEPLOY_SERVER}:/www/inera/home/ine-ntjp-build'
    	  sh 'scp -r tak-integration/export ine-ntjp-build@${DEPLOY_SERVER}:/www/inera/home/ine-ntjp-build'
          sh "ssh -l ine-ntjp-build ${DEPLOY_SERVER} 'sudo mv tak*.war /www/inera/releases/tak; sudo mv export /www/inera/releases/tak/export-${MAVEN_POM_VERSION}; sudo sh /www/inera/releases/tak/deploy-tak.sh ${MAVEN_POM_VERSION}'"
        }
      }
    }
  }
}