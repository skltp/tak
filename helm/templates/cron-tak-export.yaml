{{ if .Values.exportCronJob.schedule }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-tak-export
spec:
  schedule: "{{ .Values.exportCronJob.schedule }}"
  timeZone: "{{ .Values.exportCronJob.timeZone }}"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            elasticGrokFilter: {{ .Values.deployments.takintegration.elasticGrokFilter }}
        spec:
          volumes:
            - name: key-volume
              secret:
                secretName: cooperation-keys
          containers:
            - name: tak-integration
              image: "{{ .Values.repository }}tak-integration:{{ .Values.container.takintegration.image.tag | default $.Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.container.takintegration.image.pullPolicy }}
              env:
                {{ if .Values.exportCronJob.nodePattern }}
                - name: NODE_PATTERN
                  value: {{ .Values.exportCronJob.nodePattern }}
                {{- end }}
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
              envFrom:
                {{- range .Values.deployments.takintegration.environment.variables._default_config_maps }}
                - configMapRef:
                    name: {{ . }}
                {{- end }}
                {{- range .Values.deployments.takintegration.environment.variables.config_maps }}
                - configMapRef:
                    name: {{ . }}
                {{- end }}
                {{- range .Values.deployments.takintegration.environment.variables.secrets }}
                - secretRef:
                    name: {{ . }}
                {{- end }}
              volumeMounts:
                - name: key-volume
                  mountPath: /home/groovy/.ssh
                  readOnly: false
              command:
                - /bin/bash
                - '-c'
                - |
                  if [[ -z $NODE_PATTERN || $NODE_NAME =~ $NODE_PATTERN ]]; then
                    cd export && ./tak-export.sh
                  else
                    echo "Skipping: node $NODE_NAME does not match execution node pattern"
                  fi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 1000 # groovy user
                seccompProfile:
                  type: RuntimeDefault
          imagePullSecrets:
            - name: regcred

          restartPolicy: OnFailure
{{- end }}