apiVersion: apps/v1
kind: Deployment
metadata:
  name: tak-web
spec:
  replicas: {{ .Values.deployments.takweb.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: tak-web
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: tak-web
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app: tak-web
        elasticGrokFilter: {{ .Values.deployments.takweb.elasticGrokFilter }}
    spec:
      imagePullSecrets:
        - name: regcred

      volumes:
        - name: config-volume
          configMap:
            name: tak-config-files
        - name: pkcs12-volume
        {{ if .Values.initContainer.certGen }}
        - name: trust-pem-vol
          secret:
            secretName: {{ .Values.pem_to_pfx.trust.secretName }}
        - name: consumer-pem-vol
          secret:
            secretName: {{ .Values.pem_to_pfx.consumer.secretName }}
        {{- end }}

      {{ if .Values.initContainer.certGen }}
      initContainers:
        - name: {{ .Values.initContainer.certGen.image.name }}
          image: "{{ .Values.repository }}{{ .Values.initContainer.certGen.image.name }}:{{ .Values.initContainer.certGen.image.tag }}"
          imagePullPolicy: {{ .Values.initContainer.certGen.image.pullPolicy | default "Always" }}
          volumeMounts:
            - name: pkcs12-volume
              mountPath: /opt/certs/pkcs12
              {{- with .Values.pem_to_pfx }}
            - name: trust-pem-vol
              mountPath: {{ .pem.path }}/{{ .trust.pemFile }}
              subPath: letsencrypt-r3.pem
            - name: consumer-pem-vol
              mountPath: {{ .pem.path }}/{{ .consumer.pemKeyFile }}
              subPath: tls.key
            - name: consumer-pem-vol
              mountPath: {{ .pem.path }}/{{ .consumer.pemCertFile }}
              subPath: tls.crt
              {{- end }}
          envFrom:
            - configMapRef:
                name: tak-pem2pfx
      {{- end }}

      containers:
        - name: tak-web
          image: "{{ .Values.repository }}tak-web:{{ .Values.container.takweb.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/tak/
            - name: pkcs12-volume
              mountPath: /etc/tak/security
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
            failureThreshold: 10
            httpGet:
              path: /tak-web/actuator/health/liveness
              port: http
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
            failureThreshold: 10
            httpGet:
              path: /tak-web/actuator/health/readiness
              port: http
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          envFrom:
            {{- range .Values.deployments.takweb.environment.variables._default_config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range .Values.deployments.takweb.environment.variables.config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range .Values.deployments.takweb.environment.variables.secrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}
