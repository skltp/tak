apiVersion: apps/v1
kind: Deployment
metadata:
  name: tak-web
spec:
  replicas: {{ .Values.deployments.takweb.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: tak-web
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: tak-web
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.git/commit-hash: {{ .Values.git.commit.hash }}
        app: tak-web
        elasticGrokFilter: {{ .Values.deployments.takweb.elasticGrokFilter }}
    spec:
      imagePullSecrets:
        - name: regcred

      volumes:
        - name: pkcs12-volume
        {{ if .Values.initContainer.certGen }}
        - name: trust-pem-vol
          secret:
            secretName: {{ .Values.pem_to_pfx.trust.secretName }}
        - name: consumer-pem-vol
          secret:
            secretName: {{ .Values.pem_to_pfx.consumer.secretName }}
        {{- end }}
      {{ if .Values.initContainer.certGen }}
      initContainers:
        - name: {{ .Values.initContainer.certGen.image.name }}
          image: "{{ .Values.repository }}{{ .Values.initContainer.certGen.image.name }}:{{ .Values.initContainer.certGen.image.tag }}"
          imagePullPolicy: {{ .Values.initContainer.certGen.image.pullPolicy | default "Always" }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000 # usr1
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: pkcs12-volume
              mountPath: /opt/certs/pkcs12
              {{- with .Values.pem_to_pfx }}
            - name: trust-pem-vol
              mountPath: {{ .pem.path }}/{{ .trust.pemFile }}
              subPath: {{ .trust.pemFile }}
            - name: consumer-pem-vol
              mountPath: {{ .pem.path }}/{{ .consumer.pemKeyFile }}
              subPath: tls.key
            - name: consumer-pem-vol
              mountPath: {{ .pem.path }}/{{ .consumer.pemCertFile }}
              subPath: tls.crt
              {{- end }}
          envFrom:
            - configMapRef:
                name: tak-pem2pfx
      {{- end }}
      containers:
        - name: tak-web
          image: "{{ .Values.repository }}tak-web:{{ .Values.container.takweb.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container.takweb.image.pullPolicy }}
          volumeMounts:
            - name: pkcs12-volume
              mountPath: /etc/tak/security
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # Injection of startup, liveness, and/or readiness probes below.
          {{- .Values.probes_web | toYaml | nindent 10 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000 # ind-app
            seccompProfile:
              type: RuntimeDefault
          resources: # Block-templated memory and CPU resources.
            {{- toYaml .Values.deployments.takweb.resources | nindent 12 }}
          {{- with .Values.deployments.takweb.environment.variables }}
          {{- if .map }}
          env:
            {{- range $k, $v := .map }}
            - name: {{ $k }}
              value: {{ $v }}
            {{- end }}
          {{- end }}
          {{- end }}
          envFrom:
            {{- range .Values.deployments.takweb.environment.variables._default_config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range .Values.deployments.takweb.environment.variables.config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range .Values.deployments.takweb.environment.variables.secrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}
