repository: docker.drift.inera.se/ntjp/

ingressroute:
  bksHostName: base.env.url # This should be overridden and set to your environment's base name.

container:
  takweb:
    image:
      tag: # Override to supply another image tag to run
      pullPolicy: Always
  takservices:
    image:
      tag: # Override to supply another image tag to run
      pullPolicy: Always
  takmonitor:
    image:
      tag: # Override to supply another image tag to run
      pullPolicy: Always
  takintegration:
    image:
      tag: # Override to supply another image tag to run
      pullPolicy: Always

exportCronJob:
  schedule: # Override to enable CronJob
  timeZone: "Europe/Stockholm"
  nodePattern: # Override to restrict execution to certain nodes

deployments:
  takweb:
    replicaCount: 1
    elasticGrokFilter: tak-web
    resources: #{} # The no-op curly-braces can optionally replace below sub-resources.
      limits:
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 512Mi
    environment:
      variables:
        _default_config_maps:
          - tak-configmap-default
        config_maps:
          # Nothing yet. Override to supply your own values.
        secrets:
          # Nothing yet.
        map: 
          CATALINA_OPTS: "-XX:MaxRAMPercentage=75 -Dspring.profiles.active=production,setSecureSessions"

  takservices:
    replicaCount: 1
    elasticGrokFilter: tak-services
    resources: #{} # The no-op curly-braces can optionally replace below sub-resources.
      limits:
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 1Gi
    environment:
      variables:
        _default_config_maps:
          - tak-configmap-default
        config_maps:
          # Nothing yet. Override to supply your own values.
        secrets:
          # Nothing yet.
        map: 
          # Nothing yet

  takmonitor:
    replicaCount: 1
    elasticGrokFilter: tak-monitor
    resources: #{} # The no-op curly-braces can optionally replace below sub-resources.
      limits:
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 512Mi
    environment:
      variables:
        _default_config_maps:
          - tak-configmap-default
        config_maps:
        # Nothing yet. Override to supply your own values.
        secrets:
        # Nothing yet.
        map: 
          CATALINA_OPTS: "-XX:MaxRAMPercentage=75 -Dspring.profiles.active=production"

  takintegration:
    elasticGrokFilter: cronjob
    environment:
      variables:
        _default_config_maps:
          - tak-configmap-default
        config_maps:
          # Nothing yet. Override to supply your own values.
        secrets:
          # Nothing yet.
        map: 
          CATALINA_OPTS: "-XX:MaxRAMPercentage=75 -Dspring.profiles.active=production"

initContainer: {} # Override to use cert-generator init container

pem_to_pfx:
  envPrefix: PEM2PFX
  pem:
    path: /opt/certs/pem
  pfx:
    path: /opt/certs/pkcs12
  trust:
    secretName: letsencrypt-r3-issuer
    pemFile: letsencrypt-r3.pem
    pfxFile: truststore.pfx
    password: password
  consumer:
    secretName: test.esb.ntjp.sjunet.org
    pemCertFile: tls.crt
    pemKeyFile: tls.key
    pfxFile: consumer.pfx
    password: password

logConfig:
  root:
    level: WARN
  loggers:
    - name: se.skltp.tak
      level: INFO
    - name: org.springframework.web
      level: WARN
    - name: org.apache.cxf
      level: WARN
    - name: org.hibernate
      level: WARN
  jsonEventTemplate:
      path: /etc/tak/tak-ecs-template.json
      
ipWhiteList:
  sourceRange:
    - 127.0.0.1/32 #default, denies access from all IPs except localhost

probes_monitor:
  startupProbe:
    httpGet:
      path: /tak-monitor/actuator/health/readiness
      port: http
    initialDelaySeconds: 15
    periodSeconds: 3
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 20
  livenessProbe:
    httpGet:
      path: /tak-monitor/actuator/health/liveness
      port: http
    periodSeconds: 15
    timeoutSeconds: 5
    # 3x 10s + 5s timeout allows for up to 45 seconds of non-responsiveness before pod kill-and-restart.
    #    Earliest kill possible 55 seconds after startup completes.
    failureThreshold: 2
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /tak-monitor/actuator/health/readiness
      port: http
    periodSeconds: 15
    timeoutSeconds: 5
    # 1x 10s + timeout 5s allows for up to 15 seconds on non-response before traffic is cut from pod.
    #    Earliest cut possible 24 seconds after startup completes.
    failureThreshold: 1
    successThreshold: 1

probes_services:
  startupProbe:
    httpGet:
      path: /actuator/health/readiness
      port: http
    initialDelaySeconds: 60
    periodSeconds: 15  # 60s initial + 10 failures * 15s period + 4s timeout = 60-214 seconds startup before failure and restart.
    timeoutSeconds: 4
    successThreshold: 1
    failureThreshold: 10
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    # 3x 10s + 5s timeout allows for up to 45 seconds of non-responsiveness before pod kill-and-restart.
    #    Earliest kill possible 55 seconds after startup completes.
    failureThreshold: 4
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: http
    # lower initial delay than liveness, but same period, allows traffic to be governed before liveness is tested.
    initialDelaySeconds: 9
    periodSeconds: 10
    timeoutSeconds: 5
    # 1x 10s + timeout 5s allows for up to 15 seconds on non-response before traffic is cut from pod.
    #    Earliest cut possible 24 seconds after startup completes.
    failureThreshold: 1
    successThreshold: 1

probes_web:
  startupProbe:
    httpGet:
      path: /tak-web/actuator/health/readiness
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10  # 30s initial + 10 failures * 10s period + 4s timeout = 30-134 seconds startup before failure and restart.
    timeoutSeconds: 4
    successThreshold: 1
    failureThreshold: 10
  livenessProbe:
    httpGet:
      path: /tak-web/actuator/health/liveness
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    # 3x 10s + 5s timeout allows for up to 45 seconds of non-responsiveness before pod kill-and-restart.
    #    Earliest kill possible 55 seconds after startup completes.
    failureThreshold: 4
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /tak-web/actuator/health/readiness
      port: http
    # lower initial delay than liveness, but same period, allows traffic to be governed before liveness is tested.
    initialDelaySeconds: 9
    periodSeconds: 10
    timeoutSeconds: 5
    # 1x 10s + timeout 5s allows for up to 15 seconds on non-response before traffic is cut from pod.
    #    Earliest cut possible 24 seconds after startup completes.
    failureThreshold: 1
    successThreshold: 1